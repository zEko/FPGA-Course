module crimo(clk,reset);
input reset;
input clk ;
reg samepix;
reg i;
reg [7:0]diff[1:54];
wire [7:0]r1[1:54];
wire [7:0]g1[1:54];
wire [7:0]b1[1:54];
wire [7:0]r2[1:54];
wire [7:0]g2[1:54];
wire [7:0]b2[1:54];
reg conv1[1:54],conv2[1:54];
assign g1[1] = 255;
assign g1[2] = 255;
assign g1[3] = 255;
assign g1[4] = 255;
assign g1[5] = 255;
assign g1[6] = 255;
assign g1[7] = 255;
assign g1[8] = 255;
assign g1[9] = 255;
assign g1[10] = 255;
assign g1[11] = 255;
assign g1[12] = 255;
assign g1[13] = 0;
assign g1[14] = 255;
assign g1[15] = 0;
assign g1[16] = 255;
assign g1[17] = 255;
assign g1[18] = 255;
assign g1[19] = 255;
assign g1[20] = 255;
assign g1[21] = 255;
assign g1[22] = 255;
assign g1[23] = 255;
assign g1[24] = 255;
assign g1[25] = 255;
assign g1[26] = 255;
assign g1[27] = 255;
assign g1[28] = 255;
assign g1[29] = 255;
assign g1[30] = 0;
assign g1[31] = 255;
assign g1[32] = 255;
assign g1[33] = 255;
assign g1[34] = 0;
assign g1[35] = 255;
assign g1[36] = 255;
assign g1[37] = 255;
assign g1[38] = 255;
assign g1[39] = 255;
assign g1[40] = 0;
assign g1[41] = 0;
assign g1[42] = 0;
assign g1[43] = 255;
assign g1[44] = 255;
assign g1[45] = 255;
assign g1[46] = 255;
assign g1[47] = 255;
assign g1[48] = 255;
assign g1[49] = 255;
assign g1[50] = 255;
assign g1[51] = 255;
assign g1[52] = 255;
assign g1[53] = 255;
assign g1[54] = 255;
assign b2[1] = 255;
assign b2[2] = 255;
assign b2[3] = 3;
assign b2[4] = 1;
assign b2[5] = 0;
assign b2[6] = 1;
assign b2[7] = 6;
assign b2[8] = 255;
assign b2[9] = 255;
assign b2[10] = 255;
assign b2[11] = 1;
assign b2[12] = 0;
assign b2[13] = 0;
assign b2[14] = 0;
assign b2[15] = 0;
assign b2[16] = 0;
assign b2[17] = 1;
assign b2[18] = 255;
assign b2[19] = 255;
assign b2[20] = 0;
assign b2[21] = 0;
assign b2[22] = 0;
assign b2[23] = 0;
assign b2[24] = 0;
assign b2[25] = 0;
assign b2[26] = 0;
assign b2[27] = 255;
assign b2[28] = 255;
assign b2[29] = 0;
assign b2[30] = 0;
assign b2[31] = 0;
assign b2[32] = 0;
assign b2[33] = 0;
assign b2[34] = 0;
assign b2[35] = 0;
assign b2[36] = 255;
assign b2[37] = 255;
assign b2[38] = 1;
assign b2[39] = 0;
assign b2[40] = 0;
assign b2[41] = 0;
assign b2[42] = 0;
assign b2[43] = 0;
assign b2[44] = 3;
assign b2[45] = 255;
assign b2[46] = 255;
assign b2[47] = 255;
assign b2[48] = 2;
assign b2[49] = 1;
assign b2[50] = 0;
assign b2[51] = 1;
assign b2[52] = 3;
assign b2[53] = 255;
assign b2[54] = 255;
assign b1[1] = 255;
assign b1[2] = 255;
assign b1[3] = 73;
assign b1[4] = 39;
assign b1[5] = 5;
assign b1[6] = 39;
assign b1[7] = 73;
assign b1[8] = 255;
assign b1[9] = 255;
assign b1[10] = 255;
assign b1[11] = 57;
assign b1[12] = 0;
assign b1[13] = 0;
assign b1[14] = 0;
assign b1[15] = 0;
assign b1[16] = 0;
assign b1[17] = 57;
assign b1[18] = 255;
assign b1[19] = 255;
assign b1[20] = 22;
assign b1[21] = 0;
assign b1[22] = 0;
assign b1[23] = 0;
assign b1[24] = 0;
assign b1[25] = 0;
assign b1[26] = 22;
assign b1[27] = 255;
assign b1[28] = 255;
assign b1[29] = 22;
assign b1[30] = 0;
assign b1[31] = 0;
assign b1[32] = 0;
assign b1[33] = 0;
assign b1[34] = 0;
assign b1[35] = 22;
assign b1[36] = 255;
assign b1[37] = 255;
assign b1[38] = 57;
assign b1[39] = 0;
assign b1[40] = 0;
assign b1[41] = 0;
assign b1[42] = 0;
assign b1[43] = 0;
assign b1[44] = 57;
assign b1[45] = 255;
assign b1[46] = 255;
assign b1[47] = 255;
assign b1[48] = 39;
assign b1[49] = 39;
assign b1[50] = 5;
assign b1[51] = 39;
assign b1[52] = 39;
assign b1[53] = 255;
assign b1[54] = 255;
assign r1[1] = 255;
assign r1[2] = 255;
assign r1[3] = 255;
assign r1[4] = 255;
assign r1[5] = 255;
assign r1[6] = 255;
assign r1[7] = 255;
assign r1[8] = 255;
assign r1[9] = 255;
assign r1[10] = 255;
assign r1[11] = 255;
assign r1[12] = 255;
assign r1[13] = 0;
assign r1[14] = 255;
assign r1[15] = 0;
assign r1[16] = 255;
assign r1[17] = 255;
assign r1[18] = 255;
assign r1[19] = 255;
assign r1[20] = 255;
assign r1[21] = 255;
assign r1[22] = 255;
assign r1[23] = 255;
assign r1[24] = 255;
assign r1[25] = 255;
assign r1[26] = 255;
assign r1[27] = 255;
assign r1[28] = 255;
assign r1[29] = 255;
assign r1[30] = 0;
assign r1[31] = 255;
assign r1[32] = 255;
assign r1[33] = 255;
assign r1[34] = 0;
assign r1[35] = 255;
assign r1[36] = 255;
assign r1[37] = 255;
assign r1[38] = 255;
assign r1[39] = 255;
assign r1[40] = 0;
assign r1[41] = 0;
assign r1[42] = 0;
assign r1[43] = 255;
assign r1[44] = 255;
assign r1[45] = 255;
assign r1[46] = 255;
assign r1[47] = 255;
assign r1[48] = 255;
assign r1[49] = 255;
assign r1[50] = 255;
assign r1[51] = 255;
assign r1[52] = 255;
assign r1[53] = 255;
assign r1[54] = 255;
assign r2[1] = 255;
assign r2[2] = 255;
assign r2[3] = 132;
assign r2[4] = 130;
assign r2[5] = 130;
assign r2[6] = 130;
assign r2[7] = 137;
assign r2[8] = 255;
assign r2[9] = 255;
assign r2[10] = 255;
assign r2[11] = 130;
assign r2[12] = 127;
assign r2[13] = 0;
assign r2[14] = 127;
assign r2[15] = 0;
assign r2[16] = 127;
assign r2[17] = 130;
assign r2[18] = 255;
assign r2[19] = 255;
assign r2[20] = 128;
assign r2[21] = 127;
assign r2[22] = 127;
assign r2[23] = 127;
assign r2[24] = 127;
assign r2[25] = 127;
assign r2[26] = 128;
assign r2[27] = 255;
assign r2[28] = 255;
assign r2[29] = 128;
assign r2[30] = 0;
assign r2[31] = 127;
assign r2[32] = 127;
assign r2[33] = 127;
assign r2[34] = 0;
assign r2[35] = 128;
assign r2[36] = 255;
assign r2[37] = 255;
assign r2[38] = 130;
assign r2[39] = 127;
assign r2[40] = 0;
assign r2[41] = 0;
assign r2[42] = 0;
assign r2[43] = 127;
assign r2[44] = 134;
assign r2[45] = 255;
assign r2[46] = 255;
assign r2[47] = 255;
assign r2[48] = 132;
assign r2[49] = 130;
assign r2[50] = 127;
assign r2[51] = 130;
assign r2[52] = 137;
assign r2[53] = 255;
assign r2[54] = 255;
assign g2[1] = 255;
assign g2[2] = 255;
assign g2[3] = 11;
assign g2[4] = 6;
assign g2[5] = 5;
assign g2[6] = 6;
assign g2[7] = 21;
assign g2[8] = 255;
assign g2[9] = 255;
assign g2[10] = 255;
assign g2[11] = 6;
assign g2[12] = 0;
assign g2[13] = 0;
assign g2[14] = 0;
assign g2[15] = 0;
assign g2[16] = 0;
assign g2[17] = 6;
assign g2[18] = 255;
assign g2[19] = 255;
assign g2[20] = 2;
assign g2[21] = 0;
assign g2[22] = 0;
assign g2[23] = 0;
assign g2[24] = 0;
assign g2[25] = 0;
assign g2[26] = 2;
assign g2[27] = 255;
assign g2[28] = 255;
assign g2[29] = 2;
assign g2[30] = 0;
assign g2[31] = 0;
assign g2[32] = 0;
assign g2[33] = 0;
assign g2[34] = 0;
assign g2[35] = 2;
assign g2[36] = 255;
assign g2[37] = 255;
assign g2[38] = 6;
assign g2[39] = 0;
assign g2[40] = 0;
assign g2[41] = 0;
assign g2[42] = 0;
assign g2[43] = 0;
assign g2[44] = 13;
assign g2[45] = 255;
assign g2[46] = 255;
assign g2[47] = 255;
assign g2[48] = 11;
assign g2[49] = 6;
assign g2[50] = 0;
assign g2[51] = 6;
assign g2[52] = 21;
assign g2[53] = 255;
assign g2[54] = 255;
always@(posedge clk)
begin
  if (reset==1)
    begin
    i=1;
    samepix=0;
    end
  if(i<=54)
  begin
  conv1[i]=0.299*r1[i]+0.587*g1[i]+0.114*b1[i];
  conv2[i]=0.299*r2[i]+0.587*g2[i]+0.114*b2[i];
  diff[i]=conv1[i]-conv2[i];
  if (diff[i]==0)
    begin
      samepix=samepix+1;
    end
  i=i+1;
end
end
endmodule

      
    







